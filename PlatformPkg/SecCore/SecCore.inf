#
# This file contains an 'Intel Pre-EFI Module' and is licensed
# for Intel CPUs and Chipsets under the terms of your license 
# agreement with Intel or your vendor.  This file may be      
# modified by the user, subject to additional terms of the    
# license agreement                                           
#
## @file
# This is the first module taking control of the platform upon power-on/reset.
#
# This module implements the first phase of Tiano - SEC. SecEntry.asm contains the entry point of this module.
#  Blank1.pad and Blank2.pad file tagged with "ToolCode="DUMMY"" is for adjusting alignment of VTF section.
# Copyright (c) 2006 - 2011, Intel Corporation. All rights reserved.<BR>
#
#  This software and associated documentation (if any) is furnished
#  under a license and may only be used or copied in accordance
#  with the terms of the license. Except as permitted by such
#  license, no part of this software or documentation may be
#  reproduced, stored in a retrieval system, or transmitted in any
#  form or by any means without the express written consent of
#  Intel Corporation.
#
#
##

[Defines]
  INF_VERSION                    = 0x00010005
  BASE_NAME                      = SecCore
  FILE_GUID                      = 1BA0062E-C779-4582-8566-336AE8F78F09
  MODULE_TYPE                    = SEC
  VERSION_STRING                 = 1.0


#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC
#

[Sources]
  SecMain.c
  SecMain.h
  FindPeiCore.c
  PlatformSecLib.c

[Sources.IA32]
  Ia32/Flat32.asm
  Ia32/ResetVec.asm16
  Ia32/Stack.asm

[Packages]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec
  UefiCpuPkg/UefiCpuPkg.dec
  PlatformPkg/PlatformPkg.dec
  ByoModulePkg/ByoModulePkg.dec
  AsiaPkg/AsiaPkg.dec


[LibraryClasses]
  BaseMemoryLib
  DebugLib
  BaseLib
  PcdLib
  DebugAgentLib
  UefiCpuLib
  PeCoffGetEntryPointLib
  PeCoffExtraActionLib
  PerformanceLib
  LocalApicLib
  PcdLib

  

[Ppis]
  gEfiSecPlatformInformationPpiGuid             # PPI ALWAYS_PRODUCED
  gEfiTemporaryRamSupportPpiGuid                # PPI ALWAYS_PRODUCED
  

[Pcd]
  gPlatformModuleTokenSpaceGuid.PcdPeiTemporaryRamStackSize
  gPlatformModuleTokenSpaceGuid.PcdSecCoreMaxPpiSupported
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashFvRecoveryBase
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashFvRecoverySize
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashFvRecoveryBackUpBase
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashFvMainBase
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashFvMainSize
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashNvStorageMicrocodeBase
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashNvStorageMicrocodeSize
  gPlatformModuleTokenSpaceGuid.PcdTemporaryRamBase
  gPlatformModuleTokenSpaceGuid.PcdTemporaryRamSize
  gEfiMdePkgTokenSpaceGuid.PcdPciExpressBaseAddress
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashAreaBaseAddress
  gEfiByoModulePkgTokenSpaceGuid.PcdFlashAreaSize
  gEfiByoModulePkgTokenSpaceGuid.AcpiIoPortBaseAddress
  gPlatformModuleTokenSpaceGuid.PcdBiosSecTableAddress
  gPlatformModuleTokenSpaceGuid.PcdBiosSecTableVersion
  gEfiByoModulePkgTokenSpaceGuid.PcdBiosSecTableSignature
  gEfiByoModulePkgTokenSpaceGuid.PcdSwSmiCmdPort
#ifdef ZX_SECRET_CODE
#Conditional if directive is NOT supported in .INF file, just a marker.
  gPlatformModuleTokenSpaceGuid.PcdMSRSEC0Base
  gPlatformModuleTokenSpaceGuid.PcdMSRSEC0Size
  gPlatformModuleTokenSpaceGuid.PcdMSRSEC1Base
  gPlatformModuleTokenSpaceGuid.PcdMSRSEC1Size
  gPlatformModuleTokenSpaceGuid.PcdBootConfigBase
  gPlatformModuleTokenSpaceGuid.PcdBootConfigSize
#endif
  
  
  