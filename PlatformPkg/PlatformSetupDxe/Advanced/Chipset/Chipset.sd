/** @file

Copyright (c) 2006 - 2011, Byosoft Corporation.<BR>
All rights reserved.This software and associated documentation (if any)
is furnished under a license and may only be used or copied in
accordance with the terms of the license. Except as permitted by such
license, no part of this software or documentation may be reproduced,
stored in a retrieval system, or transmitted in any form or by any
means without the express written consent of Byosoft Corporation.

File Name:
  Chipset.sd

Abstract:
  Chipset Form Template.

Revision History:

**/



#ifdef ADVANCED_FORM_SET


  #ifdef FORM_SET_GOTO
    goto CHIPSET_FORM_ID, 
      prompt = STRING_TOKEN(STR_CHIPSET_FORM),
      help   = STRING_TOKEN(STR_CHIPSET_FORM_HELP);
  #endif

  #ifdef FORM_SET_FORM

    form formid = AUTO_ID(CHIPSET_FORM_ID),
      title = STRING_TOKEN(STR_CHIPSET_FORM);
      
      subtitle text = STRING_TOKEN(STR_EMPTY);		
 
 
     oneof varid = SETUP_DATA.CRBPlatformSelection,
        questionid = KEY_VALUE_CRB_MODE_SEL,
        prompt      = STRING_TOKEN(STR_CRB_MODE_SEL),
        help        = STRING_TOKEN(STR_CRB_MODE_SEL_HELP),
        flags = INTERACTIVE,
        option text = STRING_TOKEN(STR_NOTEBOOK_MODE),   value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT ;
        option text = STRING_TOKEN(STR_DESKTOP_MODE), value = 1, flags = RESET_REQUIRED;          
       endoneof;    
     
    subtitle text = STRING_TOKEN(STR_EMPTY);		
    text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_NORTH_BRIDGE),
      flags  = 0,
      key    = 0;  
       oneof varid = SETUP_DATA.NBSPEValue,
        questionid = KEY_VALUE_NBSPE,
        prompt      = STRING_TOKEN(STR_NB_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        flags = INTERACTIVE,
        option text = STRING_TOKEN(STR_MANUAL), value = 0, flags = INTERACTIVE;
        option text = STRING_TOKEN(STR_S),      value = 1, flags = INTERACTIVE;
        option text = STRING_TOKEN(STR_P_S),    value = 2, flags = INTERACTIVE | DEFAULT;
        option text = STRING_TOKEN(STR_E_P_S),  value = 3, flags = INTERACTIVE;
      endoneof;         

     suppressif NOT ideqval SETUP_DATA.NBSPEValue == 0;  
        
      oneof varid = SETUP_DATA.D0F0SPEValue,
        prompt      = STRING_TOKEN(STR_D0F0_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof; 
      
      oneof varid = SETUP_DATA.D0F1SPEValue,
        prompt      = STRING_TOKEN(STR_D0F1_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof;
      
      oneof varid = SETUP_DATA.D0F2SPEValue,
        prompt      = STRING_TOKEN(STR_D0F2_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
       option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
      
      oneof varid = SETUP_DATA.D0F3SPEValue,
        prompt      = STRING_TOKEN(STR_D0F3_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
       option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;  
      
      oneof varid = SETUP_DATA.D0F4SPEValue,
        prompt      = STRING_TOKEN(STR_D0F4_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
       option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
     endoneof;
      
      oneof varid = SETUP_DATA.D0F5SPEValue,
        prompt      = STRING_TOKEN(STR_D0F5_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
       option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
 
      endoneof; 
      
      oneof varid = SETUP_DATA.D0F6SPEValue,
        prompt      = STRING_TOKEN(STR_D0F6_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof;

      
      //oneof varid = SETUP_DATA.D2F0SPEValue,
      //  prompt      = STRING_TOKEN(STR_D2F0_SPE),
       // help        = STRING_TOKEN(STR_EMPTY),
       // option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
       // option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
       // option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       //endoneof; 
      
      oneof varid = SETUP_DATA.D3F0SPEValue,
        prompt      = STRING_TOKEN(STR_D3F0_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
      
      oneof varid = SETUP_DATA.D3F1SPEValue,
        prompt      = STRING_TOKEN(STR_D3F1_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
       
      oneof varid = SETUP_DATA.D3F2SPEValue,
        prompt      = STRING_TOKEN(STR_D3F2_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
      
      oneof varid = SETUP_DATA.D3F3SPEValue,
        prompt      = STRING_TOKEN(STR_D3F3_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
      
      oneof varid = SETUP_DATA.D4F0SPEValue,
        prompt      = STRING_TOKEN(STR_D4F0_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
      
       oneof varid = SETUP_DATA.D4F1SPEValue,
        prompt      = STRING_TOKEN(STR_D4F1_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
      
      
     oneof varid = SETUP_DATA.D5F0SPEValue,
        prompt      = STRING_TOKEN(STR_D5F0_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
      
      
      oneof varid = SETUP_DATA.D5F1SPEValue,
        prompt      = STRING_TOKEN(STR_D5F1_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
   
   
     oneof varid = SETUP_DATA.D8F0SPEValue,
        prompt      = STRING_TOKEN(STR_D8F0_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof; 


      oneof varid = SETUP_DATA.D9F0SPEValue,
        prompt      = STRING_TOKEN(STR_D9F0_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof; 
             
       oneof varid = SETUP_DATA.RCRBHSPEValue,
        prompt      = STRING_TOKEN(STR_RCRBH_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
      
      
     oneof varid = SETUP_DATA.PCIEEPHYSPEValue,
        prompt      = STRING_TOKEN(STR_PCIE_PHY_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof;
       
      oneof varid = SETUP_DATA.D1F0SPEValue,
        prompt      = STRING_TOKEN(STR_D1F0_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof;
      

  endif;
  
   subtitle text = STRING_TOKEN(STR_EMPTY); 
       text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_SOUTH_BRIDGE),
      flags  = 0,
      key    = 0;  
      
      oneof varid = SETUP_DATA.SBSPEValue,
        questionid = KEY_VALUE_SBSPE,
        prompt      = STRING_TOKEN(STR_SB_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        flags = INTERACTIVE,
        option text = STRING_TOKEN(STR_MANUAL), value = 0, flags = INTERACTIVE;
        option text = STRING_TOKEN(STR_S),      value = 1, flags = INTERACTIVE;
        option text = STRING_TOKEN(STR_P_S),    value = 2, flags = INTERACTIVE | DEFAULT;
        option text = STRING_TOKEN(STR_E_P_S),  value = 3, flags = INTERACTIVE;
      endoneof;   

      
   suppressif NOT ideqval SETUP_DATA.SBSPEValue == 0;  
      oneof varid = SETUP_DATA.SATASPEValue,
 	    prompt 	    = STRING_TOKEN(STR_SATA_SPE),
 	    help		= STRING_TOKEN(STR_EMPTY),
  	    option text = STRING_TOKEN(STR_S),	value = 0, flags = RESET_REQUIRED;			
  	    option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
 	    option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
 	  endoneof; 
   
      oneof varid = SETUP_DATA.VARTSPEValue,
        prompt      = STRING_TOKEN(STR_VART_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text  = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof; 
      
      oneof varid = SETUP_DATA.ESPISPEValue,
        prompt      = STRING_TOKEN(STR_ESPI_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof;
        
      oneof varid = SETUP_DATA.BusCtrlSPEValue,
        prompt      = STRING_TOKEN(STR_BUS_CTRL_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof;
      
      oneof varid = SETUP_DATA.PMUSPEValue,
        prompt      = STRING_TOKEN(STR_PMU_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
       endoneof; 
      
      oneof varid = SETUP_DATA.PCCASPEValue,
        prompt      = STRING_TOKEN(STR_PCCA_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof;
       
      
       oneof varid = SETUP_DATA.HDACSPEValue,
        prompt      = STRING_TOKEN(STR_HDAC_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof; 
     
               
       oneof varid = SETUP_DATA.SPISPEValue,
        prompt      = STRING_TOKEN(STR_SPI_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof; 

      //add_GRW_20180413
      oneof varid = SETUP_DATA.SOCXHCISPEValue,
        prompt      = STRING_TOKEN(STR_XHCI_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof; 
        
      oneof varid = SETUP_DATA.SOCEHCISPEValue,
        prompt      = STRING_TOKEN(STR_EHCI_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof; 
		
		
      oneof varid = SETUP_DATA.SOCUHCISPEValue,
        prompt      = STRING_TOKEN(STR_UHCI_SPE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_S),  value = 0, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_P_S), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_E_P_S), value = 2, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
      endoneof; 
      //add_GRW_20180413       
 
     endif;
     
       subtitle text = STRING_TOKEN(STR_EMPTY);		
      
   goto CHIPSET_DEBUG_FORM_ID, 
      prompt = STRING_TOKEN(STR_CHIPSET_DEBUG_FORM),
      help   = STRING_TOKEN(STR_CHIPSET_DEBUG_FORM);


	subtitle text = STRING_TOKEN(STR_EMPTY);	   
	oneof varid = SETUP_DATA.IoTrapEn,
	 prompt 	 = STRING_TOKEN(STR_IO_TRAP),
	 help		 = STRING_TOKEN(STR_IO_TRAP_HELP),
	 option text = STRING_TOKEN(STR_ENABLE), value = 1, flags = RESET_REQUIRED|DEFAULT;
	 option text = STRING_TOKEN(STR_DISABLE),  value = 0, flags = RESET_REQUIRED;
   endoneof;  


   endform;  //end CHIPSET_FORM  
    
    
  form formid = AUTO_ID(CHIPSET_DEBUG_FORM_ID),
     title = STRING_TOKEN(STR_CHIPSET_DEBUG_FORM);
  
     goto CHIPSET_DEBUG_FEATURE_FORM_ID, 
      prompt = STRING_TOKEN(STR_CHIPSET_DEBUG_FEATURE_FORM),
      help   = STRING_TOKEN(STR_CHIPSET_DEBUG_FEATURE_FORM);
   
    subtitle text = STRING_TOKEN(STR_EMPTY);
      
     goto ERROR_REPORTING_FORM_ID, 
      prompt = STRING_TOKEN(STR_ERROR_REPORTING_FORM),
      help   = STRING_TOKEN(STR_EMPTY);
  
    subtitle text = STRING_TOKEN(STR_EMPTY);
       
    goto DEBUGSIGNAL_FORM_ID, 
      prompt = STRING_TOKEN(STR_DEBUGSIGNAL_FORM),
      help   = STRING_TOKEN(STR_EMPTY); 
      
    subtitle text = STRING_TOKEN(STR_EMPTY);
    
#ifdef ZX_SECRET_CODE
 goto CPU_DEBUG_FORM_ID, //GRW-add-1127
      prompt = STRING_TOKEN(STR_CPU_DEBUG_FORM),
      help   = STRING_TOKEN(STR_CPU_DEBUG_FORM);
#endif
  endform;  //end CHIPSET DEBUG FORM
  
#ifdef ZX_SECRET_CODE
  form formid = AUTO_ID(CPU_DEBUG_FORM_ID),//GRW-add-1127

     title = STRING_TOKEN(STR_CPU_DEBUG_FORM);

     oneof varid = SETUP_DATA.CPU_MASTER_FSBC_EN,//GRW-add-1127
        prompt = STRING_TOKEN(STR_CPU_FSBC_EN),
        help = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
     endoneof;
     
	suppressif ideqval SETUP_DATA.CPU_MASTER_FSBC_EN==0;
	   oneof varid = SETUP_DATA.CPU_FSBC_PCIE_ON,
			prompt      = STRING_TOKEN(STR_DUMP_TARGET),
			help        = STRING_TOKEN(STR_DUMP_TARGET_HELP),
			option text = STRING_TOKEN(STR_DRAM), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
			option text = STRING_TOKEN(STR_PCIE),  value = 1, flags = RESET_REQUIRED;          
       endoneof;
           
       oneof varid = SETUP_DATA.CPU_FSBC_TOPCIE,
			prompt      = STRING_TOKEN(STR_CPU_FSBC_TOPPCIE),
			help        = STRING_TOKEN(STR_CPU_FSBC_TOPPCIE_HELP),
			option text = STRING_TOKEN(STR_PE0), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
			option text = STRING_TOKEN(STR_PE4),  value = 1, flags = RESET_REQUIRED;          
       endoneof;
	   
       oneof varid = SETUP_DATA.CPU_FSBC_SOCCAP_ON,//GRW-add-20180115
        prompt = STRING_TOKEN(STR_CPU_FSBC_SOCCAP_ON),
        help = STRING_TOKEN(STR_CPU_FSBC_SOCCAP_ON_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
       endoneof;
	  
	   /*
      suppressif TRUE; 
      oneof varid = SETUP_DATA.CPU_FSBC_DRAM_ON  ,
			prompt      = STRING_TOKEN(STR_CPU_BUFFER),
			help        = STRING_TOKEN(STR_EMPTY),
			option text = STRING_TOKEN(STR_DRAM_BUFFER_OFF), value = 0, flags = RESET_REQUIRED| MANUFACTURING|DEFAULT;
			option text = STRING_TOKEN(STR_DRAM_BUFFER_ON),  value = 1, flags = RESET_REQUIRED;          
       endoneof;            
       endif;  //end if TRUE
       */
       oneof varid = SETUP_DATA.CPU_FSBC_STREAM_EN,
        prompt      = STRING_TOKEN(STR_CPU_FSBC_STREAM_EN),
        help        = STRING_TOKEN(STR_CPU_FSBC_STREAM_EN_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
       endoneof;
	   
	   oneof varid = SETUP_DATA.CPU_FSBC_P2CC2PONLY,
        prompt      = STRING_TOKEN(STR_CPU_FSBC_P2CC2PONLY),
        help        = STRING_TOKEN(STR_CPU_FSBC_P2CC2PONLY_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
       endoneof;
	   
      oneof varid = SETUP_DATA.CPU_FSBC_MISSPACKE_EN,
        prompt = STRING_TOKEN(STR_CPU_FSBC_MISSPACKE_EN),
        help = STRING_TOKEN(STR_CPU_FSBC_MISSPACKE_EN_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
      endoneof; 

      oneof varid = SETUP_DATA.CPU_FSBC_TIGPULSE_EN,
        prompt = STRING_TOKEN(STR_CPU_FSBC_TIGPULSE_EN),
        help = STRING_TOKEN(STR_CPU_FSBC_TIGPULSE_EN_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
     endoneof;
   
     oneof varid = SETUP_DATA.CPU_FSBC_IFSBCSTP_EN,
        prompt = STRING_TOKEN(STR_CPU_FSBC_IFSBCSTP_EN),
        help = STRING_TOKEN(STR_CPU_FSBC_IFSBCSTP_EN_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
      endoneof;

	endif;
    subtitle text = STRING_TOKEN(STR_EMPTY);

   oneof varid = SETUP_DATA.CPU_TRACER_EN,
        prompt = STRING_TOKEN(STR_CPU_TRACER_EN),
        help = STRING_TOKEN(STR_CPU_TRACER_EN_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
     endoneof;
	 
   suppressif NOT ideqval SETUP_DATA.CPU_TRACER_EN == 1;
	   numeric varid=SETUP_DATA.CPU_TRACER_INSTRUCTION_INTERVAL,
        prompt   = STRING_TOKEN(STR_CPU_TRACER_INSTRUCTION_INTERVAL),
        help   = STRING_TOKEN(STR_CPU_TRACER_INSTRUCTION_INTERVAL_HLPE),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0xFFFFFFFF,
        step=0,
        default=0x40000,
       endnumeric;
       
       numeric varid=SETUP_DATA.CPU_TRACER_DUMP_MEMORY_BASE,
        prompt   = STRING_TOKEN(STR_CPU_TRACER_DUMP_MEMORY_BASE),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0xFFFFFFFFFF,
        step=0,
        default=0x40000000,
        endnumeric;
 		

	 endif;
    
 	 endform;  //end CPU DEBUG FORM
 #endif
    form formid = AUTO_ID(CHIPSET_DEBUG_FEATURE_FORM_ID),
      title = STRING_TOKEN(STR_CHIPSET_DEBUG_FEATURE_FORM);       
 
      oneof varid = SETUP_DATA.CpuClockControl,
        prompt      = STRING_TOKEN(STR_CPU_CLK_CTRL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR__OC10), value = 0,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR__OC5),  value = 1,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_NO_OC), value = 2,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_OC1),   value = 3,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC2),   value = 4,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC3),   value = 5,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC4),   value = 6,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC5),   value = 7,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC6),   value = 8,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC7),   value = 9,  flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC8),   value = 10, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC9),   value = 11, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_OC10),  value = 12, flags = RESET_REQUIRED;
     endoneof;    

   /*   oneof varid = SETUP_DATA.CpuSSCControl,
        prompt      = STRING_TOKEN(STR_CPU_SSC_CTRL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
     endoneof; 
     
      oneof varid = SETUP_DATA.PcieClockControl,
        prompt      = STRING_TOKEN(STR_PCIE_CLK_CTRL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_NO_OC), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_1), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_2), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_3), value = 3, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_4), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_5), value = 5, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_6), value = 6, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_7), value = 7, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_8), value = 8, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_9), value = 9, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_10), value = 10, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_11), value = 11, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_12), value = 12, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_13), value = 13, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_14), value = 14, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_15), value = 15, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_16), value = 16, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_17), value =17, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_18), value = 18, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_19), value = 19, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_20), value = 20, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR__1), value = 21, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR__2), value = 22, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR__3), value = 23, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR__4), value = 24, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR__5), value = 25, flags = RESET_REQUIRED;
     endoneof;
     
    oneof varid = SETUP_DATA.PcieSSCControl,
        prompt      = STRING_TOKEN(STR_PCIE_SSC_CTRL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
     endoneof; 
     
     
      oneof varid = SETUP_DATA.SkwClockControl,
        prompt      = STRING_TOKEN(STR_SKW_CLK_CTRL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_PS_N800), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_N700), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_N600), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_N500), value = 3, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_N400), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_N300), value = 5, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_N200), value = 6, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_N100), value = 7, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_0), value = 8, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_PS_100), value = 9, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_200), value = 10, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_300), value = 11, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_400), value = 12, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_500), value = 13, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_600), value = 14, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PS_700), value = 15, flags = RESET_REQUIRED;
      endoneof;   
 
 
    oneof varid = SETUP_DATA.ChipsetCpuBclkControl,
        prompt      = STRING_TOKEN(STR_CPU_BLK_CTRL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_FREE_RUN), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_STOPPABLE), value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
     endoneof; 
     
     
 
     oneof varid = SETUP_DATA.CPUSlewRate,
        prompt      = STRING_TOKEN(STR_CPU_SLEW_RATE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_AUTO), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_SLOW), value = 1, flags = RESET_REQUIRED;
       option text = STRING_TOKEN(STR_FAST), value = 2, flags = RESET_REQUIRED;
     endoneof;
        
     	oneof varid = SETUP_DATA.OnBoard1394ClockControl,
        prompt      = STRING_TOKEN(STR_1394_CTRL),
        help        = STRING_TOKEN(STR_1394_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLED),  value = 1, flags = RESET_REQUIRED;          
      endoneof;       
              
       oneof varid = SETUP_DATA.DID_VID_LOCK,
        prompt      = STRING_TOKEN(STR_DID_VID_LOCK),
        help        = STRING_TOKEN(STR_DID_VID_LOCK_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLED),  value = 1, flags = RESET_REQUIRED;          
      endoneof; 
*/
#ifdef ZX_SECRET_CODE
       oneof varid = SETUP_DATA.VID_SEL,
        prompt      = STRING_TOKEN(STR_VID_SELECT),
        help        = STRING_TOKEN(STR_VID_SELECT_HELP),
        option text = STRING_TOKEN(STR_ZHAOXIN), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_VIA),  value = 1, flags = RESET_REQUIRED;          
      endoneof; 
#endif
 endform;  //end CHIPSET DEBUG FEATURE FORM
    
  form formid = AUTO_ID(DEBUGSIGNAL_FORM_ID),
      title = STRING_TOKEN(STR_DEBUGSIGNAL_FORM);

     oneof varid = SETUP_DATA.DebugMode,
        prompt      = STRING_TOKEN(STR_DEBUG_MODE),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_DBGMODE_ENABLE),  value = 1, flags = RESET_REQUIRED ;          
        option text = STRING_TOKEN(STR_SUSPEND_DBGMODE_ENABLE),  value = 2, flags = RESET_REQUIRED ;          
        option text = STRING_TOKEN(STR_SKIP_DBGMODE),  value = 3, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT ;          
      endoneof;    

    
   suppressif  ideqval SETUP_DATA.DebugMode==0  OR ideqval SETUP_DATA.DebugMode==3;
      oneof varid = SETUP_DATA.DebugOutputSelect,
        prompt      = STRING_TOKEN(STR_OUT_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_MDA),        value = 0, flags = RESET_REQUIRED;
         option text = STRING_TOKEN(STR_MDB),       value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
          option text = STRING_TOKEN(STR_SUS_LOW),  value = 2, flags = RESET_REQUIRED;
          option text = STRING_TOKEN(STR_SUS_HIGH), value = 3, flags = RESET_REQUIRED;
  	  endoneof;        
        
	
      oneof varid = SETUP_DATA.DebugSignalSelect0,
        prompt      = STRING_TOKEN(STR_DBG_SGNAL0_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_G0_NBSB), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_G0_GFX),  value = 1, flags = RESET_REQUIRED;          
        endoneof; 
     
     suppressif  ideqval SETUP_DATA.DebugSignalSelect0==1;  
       oneof varid = SETUP_DATA.DebugModuleSelect0,
        prompt      = STRING_TOKEN(STR_SIGANL_OUTSEL0),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_NB), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_SB),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP), value = 2, flags = RESET_REQUIRED;
       endoneof;    
    endif;       
      
      oneof varid = SETUP_DATA.DebugSignalSelect1,
        prompt      = STRING_TOKEN(STR_DBG_SGNAL1_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_G1_NBSB), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_G1_GFX),  value = 1, flags = RESET_REQUIRED;          
        endoneof;       
      
      suppressif  ideqval SETUP_DATA.DebugSignalSelect1==1;  
       oneof varid = SETUP_DATA.DebugModuleSelect1,
        prompt      = STRING_TOKEN(STR_SIGANL_OUTSEL1),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_NB), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_SB),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP), value = 2, flags = RESET_REQUIRED;
       endoneof; 
      endif;   
    
    subtitle text = STRING_TOKEN(STR_EMPTY);   
    text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_PARTING_LINE),
      flags  = 0,
      key    = 0;  
    
    text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_NB_SIGNAL_DEBUG),
      flags  = 0,
      key    = 0;  
   
 suppressif  ideqval SETUP_DATA.DebugSignalSelect0==1;  

   suppressif NOT ideqval SETUP_DATA.DebugModuleSelect0==0;     
      oneof varid = SETUP_DATA.NBGroup0TopSelcet,
        prompt      = STRING_TOKEN(STR_NBG0_TOPSEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_MCUTRFC), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_CPUIF),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_DRAMCA), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_DRAMCB), value = 3, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_PXPTRF), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_RAIDA0), value = 5, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_TACTL), value = 6, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_RAIDA1), value = 7, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_GMINTA), value = 8, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_APICX), value = 9, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NBPMU), value = 10, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SOCCAP), value = 11, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_GMINTB), value = 12, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SBDBG), value = 13, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_PCIE), value = 14, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_CRMCA), value = 15, flags = RESET_REQUIRED ;      
        option text = STRING_TOKEN(STR_DDRIO), value = 16, flags = RESET_REQUIRED ;      
        option text = STRING_TOKEN(STR_VPIL), value = 17, flags = RESET_REQUIRED ;      
       option text = STRING_TOKEN(STR_DBGPATTERN), value = 18, flags = RESET_REQUIRED ;      
      endoneof; 
 
      numeric varid=SETUP_DATA.NBGroup0ModuleSubSelect1,
        prompt   = STRING_TOKEN(STR_NB_G0_SUBSEL1),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0x3ff,
        step=0,
        default=0,
        endnumeric; 
     
      numeric varid=SETUP_DATA.NBGroup0ModuleSubSelect2,
        prompt   = STRING_TOKEN(STR_NB_G0_SUBSEL2),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0x3ff,
        step=0,
        default=0,
        endnumeric; 
    endif; //END  suppressif DebugModuleSelect0==0;
  endif;//end DebugSignalSelect0==1
  
  suppressif  ideqval SETUP_DATA.DebugSignalSelect1==1;  
 
   suppressif NOT ideqval SETUP_DATA.DebugModuleSelect1==0;    
      oneof varid = SETUP_DATA.NBGroup1TopSelcet,
        prompt      = STRING_TOKEN(STR_NBG1_TOPSEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_MCUTRFC), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_CPUIF),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_DRAMCA), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_DRAMCB), value = 3, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_PXPTRF), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_RAIDA0), value = 5, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_TACTL), value = 6, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_RAIDA1), value = 7, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_GMINTA), value = 8, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_APICX), value = 9, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NBPMU), value = 10, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SOCCAP), value = 11, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_GMINTB), value = 12, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SBDBG), value = 13, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_PCIE), value = 14, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_CRMCA), value = 15, flags = RESET_REQUIRED ;      
        option text = STRING_TOKEN(STR_DDRIO), value = 16, flags = RESET_REQUIRED ;      
        option text = STRING_TOKEN(STR_VPIL), value = 17, flags = RESET_REQUIRED ;      
       option text = STRING_TOKEN(STR_DBGPATTERN), value = 18, flags = RESET_REQUIRED ;      
      endoneof; 
      
       numeric varid=SETUP_DATA.NBGroup1ModuleSubSelect1,
        prompt   = STRING_TOKEN(STR_NB_G1_SUBSEL1),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0x3ff,
        step=0,
        default=0,
       endnumeric;
  
         numeric varid=SETUP_DATA.NBGroup1ModuleSubSelect2,
        prompt   = STRING_TOKEN(STR_NB_G1_SUBSEL2),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0x3ff,
        step=0,
        default=0,
       endnumeric;
     endif;//END  suppressif DebugModuleSelect1==0;
  endif;////end DebugSignalSelect1==1
      
    text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_PARTING_LINE),
      flags  = 0,
      key    = 0;  
    
    text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_SB_SIGNAL_DEBUG),
      flags  = 0,
      key    = 0;  
 

  suppressif NOT ideqval SETUP_DATA.DebugModuleSelect0==1 AND NOT ideqval SETUP_DATA.DebugModuleSelect1==1;      
   // grayoutif TRUE;      
		  oneof varid = SETUP_DATA.DebugSBSelectByNB,
        prompt      = STRING_TOKEN(STR_DBG_SB_SELECT),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_SB_SELECT_BY_SB), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SB_SELECT_BY_NB),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;  
       endoneof;
     // endif;
      
 suppressif  ideqval SETUP_DATA.DebugSignalSelect0==1;    
  suppressif NOT ideqval SETUP_DATA.DebugModuleSelect0==1;  
    subtitle text = STRING_TOKEN(STR_EMPTY);  
      oneof varid = SETUP_DATA.SBTopDbgMux1,
        prompt      = STRING_TOKEN(STR_SB_BUS1),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_MIXSB), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_CCA),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;          
        option text = STRING_TOKEN(STR_PCI1), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_D14_USBC_SUS), value = 3, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SMB), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_D16_USBC_SUS), value = 5, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_ESPI), value = 6, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SPI), value = 7, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_LEGACY), value = 8, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PMU), value = 9, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_AZ), value = 10, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_HPET), value = 11, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_PCIBUS), value = 12, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_EBMC_OUT1), value = 13, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VART), value = 14, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_SBGB2_SBGB1), value = 16, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_32H5A5A5A5A), value = 17, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_32HA5A5A5A5), value = 18, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_DMAC_DBG_GRP1), value = 19, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PNP), value = 20, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_D14_USBC), value = 21, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_D16_USBC), value = 22, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NEW_KBDC), value = 24, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NEW_TMRC), value = 25, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NEW_PIC), value = 26, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_PCIBUS_MIXSB), value = 27, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_LPC), value = 28, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_BUSC_MISC), value = 29, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_RTC), value = 30, flags = RESET_REQUIRED ;
         option text = STRING_TOKEN(STR_ESPI_IO), value = 31, flags = RESET_REQUIRED ;
        endoneof;
    suppressif  ideqval SETUP_DATA.DebugSBSelectByNB==0 AND ideqvallist SETUP_DATA.SBTopDbgMux1==3 4 5 6 11 14 19 21 22 25 28 29 30;
    numeric varid=SETUP_DATA.SBGroup0ModuleSubSelect,
        prompt   = STRING_TOKEN(STR_SB_G0_SUBSEL),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0xfffff,
        step=0,
        default=0,
        endnumeric; 

     endif;
    endif;//end   SETUP_DATA.DebugModuleSelect0==1;
   endif;////end DebugSignalSelect0==1
   
 suppressif  ideqval SETUP_DATA.DebugSignalSelect1==1;  
   suppressif NOT ideqval SETUP_DATA.DebugModuleSelect1==1;  
   	   subtitle text = STRING_TOKEN(STR_EMPTY);
      oneof varid = SETUP_DATA.SBTopDbgMux2,
        prompt      = STRING_TOKEN(STR_SB_BUS2),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_CCAG2),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;          
        option text = STRING_TOKEN(STR_PCI1G2), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_D14_USBC_SUSG2), value = 3, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_SMBG2), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_D16_USBC_SUSG2), value = 5, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_ESPIG2), value = 6, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_SPIG2), value = 7, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_LEGACY), value = 8, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PMUG2), value = 9, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_AZG2), value = 10, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_HPETG2), value = 11, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_PCIBUS), value = 12, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_EBMC_OUT2), value = 13, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VARTG2), value = 14, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_SBGB2_SBGB1), value = 16, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_5A5A5), value = 17, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_A5A5A), value = 18, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_DMACG2), value =19, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PNPG2), value = 20, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_D14_USBCG2), value = 21, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_D16_USBCG2), value = 22, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_MIXSB), value = 23, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NEW_KBDCG2), value = 24, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NEW_TMRCG2), value = 25, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NEW_PICG2), value = 26, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_PCIBUS_MIXSB), value = 27, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_LPCG2), value = 28, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_BUSC_MISC), value = 29, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_RTCG2), value = 30, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_ESPI_IOG2), value = 31, flags = RESET_REQUIRED;
      endoneof;

     suppressif  ideqval SETUP_DATA.DebugSBSelectByNB==0 AND ideqvallist SETUP_DATA.SBTopDbgMux2==3 4 5 6 11 14 19 21 22 25 28 29 30;
     numeric varid=SETUP_DATA.SBGroup1ModuleSubSelect,
        prompt   = STRING_TOKEN(STR_SB_G1_SUBSEL),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0xfffff,
        step=0,
        default=0,
        endnumeric; 
      endif;

  	endif;//END  suppressif  DebugModuleSelect==1;
  endif;//end DebugSignalSelect1==1;  
 	endif;//END NOT ideqval SETUP_DATA.DebugModuleSelect0==1 AND NOT ideqval SETUP_DATA.DebugModuleSelect1==1;      
  
    text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_PARTING_LINE),
      flags  = 0,
      key    = 0;  
    
    text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_TOP_DEBUG),
      flags  = 0,
      key    = 0;  

      suppressif NOT ideqval SETUP_DATA.DebugModuleSelect0==2;  
 
     oneof varid = SETUP_DATA.TOPGroup0TopSelcet,
        prompt      = STRING_TOKEN(STR_TOP_G0_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_TOP_TOP), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_TOP_PCIE_PHY),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP_SATA),  value = 4, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP_XHCI),  value = 5, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP_SATA_TXCDC),  value = 6, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP_XHCI_TXCDC),  value = 7, flags = RESET_REQUIRED;          
       endoneof;     
   
  suppressif NOT ideqval SETUP_DATA.TOPGroup0TopSelcet==5;  
  suppressif  NOT ideqval SETUP_DATA.DebugMode==1;
    /*  numeric varid   = SETUP_DATA.TOPGroup0XhciModuleSelcet,
				prompt  = STRING_TOKEN(STR_TOP_G0_XHCI_MODULE_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFF,
				step    = 0,
				default = 0,
				endnumeric;  
	*/
				
	 numeric varid   = SETUP_DATA.TOPGroup0XhciModule0Selcet,
				prompt  = STRING_TOKEN(STR_TOP_G0_XHCI_MODULE0_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xF,
				step    = 0,
				default = 0,
				endnumeric;  
	 numeric varid   = SETUP_DATA.TOPGroup0XhciGroup0Selcet,
				prompt  = STRING_TOKEN(STR_TOP_G0_XHCI_GROUP00_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFFFF,
				step    = 0,
				default = 0,
				endnumeric;
	 numeric varid   = SETUP_DATA.TOPGroup0XhciModule1Selcet,
				prompt  = STRING_TOKEN(STR_TOP_G0_XHCI_MODULE1_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xF,
				step    = 0,
				default = 0,
				endnumeric;  

	 numeric varid   = SETUP_DATA.TOPGroup0XhciGroup1Selcet,
				prompt  = STRING_TOKEN(STR_TOP_G0_XHCI_GROUP01_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFFFF,
				step    = 0,
				default = 0,
				endnumeric;
		numeric varid   = SETUP_DATA.TOPGroup0XhciMCUSelcet,
				prompt  = STRING_TOKEN(STR_TOP_G0_XHCI_MCU_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFF,
				step    = 0,
				default = 0,
				endnumeric;
    endif;//end suppressif  NOT ideqval SETUP_DATA.DebugMode==1  ; 
    
     suppressif  NOT ideqval SETUP_DATA.DebugMode==2;
   		numeric varid   = SETUP_DATA.TOPGroup0SUSXhciSelcet,
				prompt  = STRING_TOKEN(STR_TOP_G0_SUS_XHCI_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFFF,
				step    = 0,
				default = 0,
				endnumeric;
    endif;//end suppressif  NOT ideqval SETUP_DATA.DebugMode==2 ; 
  
   
 		endif;//end  suppressif  NOT ideqval SETUP_DATA.TOPGroup0TopSelcet==5; 
  
   suppressif  ideqval SETUP_DATA.TOPGroup0TopSelcet==5;  

   numeric varid   = SETUP_DATA.TOPGroup0ModuleSubSelcet,
		prompt  = STRING_TOKEN(STR_TOP_G0_MODULE_SEL),
		help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
		flags   = DISPLAY_UINT_HEX,
		minimum = 0,
		maximum = 0xFFFFF,
		step    = 0,
		default = 0,
	 endnumeric; 
	 endif;  //end  suppressif  ideqval SETUP_DATA.TOPGroup0TopSelcet==5; 
 		endif;
 		
    suppressif NOT ideqval SETUP_DATA.DebugModuleSelect1==2;  
        oneof varid = SETUP_DATA.TOPGroup1TopSelcet,
        prompt      = STRING_TOKEN(STR_TOP_G1_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_TOP_TOP), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_TOP_PCIE_PHY),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP_SATA),  value = 4, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP_XHCI),  value = 5, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP_SATA_TXCDC),  value = 6, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_TOP_XHCI_TXCDC),  value = 7, flags = RESET_REQUIRED;          
        endoneof;
 
    
      suppressif NOT ideqval SETUP_DATA.TOPGroup1TopSelcet==5;  
    /*  numeric varid   = SETUP_DATA.TOPGroup1XhciModuleSelcet,
				prompt  = STRING_TOKEN(STR_TOP_G1_XHCI_MODULE_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFF,
				step    = 0,
				default = 0,
				endnumeric; 
				*/
	suppressif  NOT ideqval SETUP_DATA.DebugMode==1;
	 numeric varid   = SETUP_DATA.TOPGroup1XhciModule2Selcet,
				prompt  = STRING_TOKEN(STR_TOP_G1_XHCI_MODULE2_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xF,
				step    = 0,
				default = 0,
				endnumeric;  
    numeric varid   = SETUP_DATA.TOPGroup1XhciGroup2Selcet,
				prompt  = STRING_TOKEN(STR_TOP_G1_XHCI_GROUP02_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFFFF,
				step    = 0,
				default = 0,
				endnumeric;
	 numeric varid   = SETUP_DATA.TOPGroup1XhciModule3Selcet,
				prompt  = STRING_TOKEN(STR_TOP_G1_XHCI_MODULE3_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xF,
				step    = 0,
				default = 0,
				endnumeric;  


	
	 numeric varid   = SETUP_DATA.TOPGroup1XhciGroup3Selcet,
				prompt  = STRING_TOKEN(STR_TOP_G1_XHCI_GROUP03_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFFFF,
				step    = 0,
				default = 0,
				endnumeric;  
		numeric varid   = SETUP_DATA.TOPGroup1XhciMCUSelcet,
				prompt  = STRING_TOKEN(STR_TOP_G1_XHCI_MCU_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFF,
				step    = 0,
				default = 0,
				endnumeric;
			endif;//	 suppressif  NOT ideqval SETUP_DATA.DebugMode==1;

	
	 suppressif  NOT ideqval SETUP_DATA.DebugMode==2;
   		numeric varid   = SETUP_DATA.TOPGroup1SUSXhciSelcet,
				prompt  = STRING_TOKEN(STR_TOP_G1_SUS_XHCI_SEL),
				help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
				flags   = DISPLAY_UINT_HEX,
				minimum = 0,
				maximum = 0xFFF,
				step    = 0,
				default = 0,
				endnumeric;
    endif;//end suppressif  NOT ideqval SETUP_DATA.DebugMode==2 ; 
    
 		endif;

   suppressif  ideqval SETUP_DATA.TOPGroup1TopSelcet==5;  

  numeric varid   = SETUP_DATA.TOPGroup1ModuleSubSelcet,
		prompt  = STRING_TOKEN(STR_TOP_G1_MODULE_SEL),
		help    = STRING_TOKEN(STR_HEX_NUMERIC_HELP),
		flags   = DISPLAY_UINT_HEX,
		minimum = 0,
		maximum = 0xFFFFF,
		step    = 0,
		default = 0,
	endnumeric;
		endif;

     endif;  
    
    
   
     

  endif; //END suppressif  DebugMode!=0;

     text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_PARTING_LINE),
      flags  = 0,
      key    = 0;  
    
     oneof varid = SETUP_DATA.SB_HS_DBG_SEL,
        prompt      = STRING_TOKEN(STR_SB_HS_DBG_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_PCCA),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_XHCI), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_AHCI), value = 3, flags = RESET_REQUIRED ;
      endoneof;           
 
     suppressif  ideqval SETUP_DATA.SB_HS_DBG_SEL == 0;  

      oneof varid = SETUP_DATA.SB_HS_PCIE_PORT_SEL,
        prompt      = STRING_TOKEN(STR_SB_HS_PCIE_PORT_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_PORT0), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_PORT4),  value = 1, flags = RESET_REQUIRED;          
      endoneof;
             
      oneof varid = SETUP_DATA.SB_HS_DBG_CH_SEL,
        prompt      = STRING_TOKEN(STR_SB_HS_DBG_CH_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_NORMAL_MODE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_DOWNSTREAN),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_UPSTREAM_READ), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_UPSTREAM_WRITE), value = 3, flags = RESET_REQUIRED ;
       endoneof;
     endif;
       
     text
      help   = STRING_TOKEN(STR_EMPTY),
      text   = STRING_TOKEN(STR_PARTING_LINE),
      flags  = 0,
      key    = 0;  
    
      oneof varid = SETUP_DATA.VDD_OFF_EN,
        prompt      = STRING_TOKEN(STR_VDD_OFF_EN),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
      endoneof;        
 
      suppressif NOT ideqval SETUP_DATA.VDD_OFF_EN==1;  
     /* numeric varid=SETUP_DATA.VDD_OFF_Module_Sel,
        prompt   = STRING_TOKEN(STR_VDD_OFF_MODULE_SEL),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0xff,
        step=0,
        default=0,
       endnumeric; */
      oneof varid = SETUP_DATA.VDD_OFF_Module_Sel,
        prompt      = STRING_TOKEN(STR_VDD_OFF_MODULE_SEL),
        help        = STRING_TOKEN(STR_EMPTY),
        option text = STRING_TOKEN(STR_VDD_SMBUS_15_0), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_VDD_SMBUS_31_16),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_VDD_ESPI_15_0), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_ESPI_31_16), value = 3, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VDD_SPI_15_0), value = 4, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_SPI_31_16),  value = 5, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_VDD_PMU_15_0), value = 6, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_PMU_31_16), value = 7, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VDD_XHCI_SUS), value = 8, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_SUS_DBG_PMU3), value = 9, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VDD_SBPTN_15_0), value = 10, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_SBPTN_31_16), value = 11, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VDD_KBDC_15_0), value = 12, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_KBDC_31_16), value = 13, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VDD_RTC_G1), value = 14, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_RTC_G0), value = 15, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VDD_D14_USBC_SUS), value = 16, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_D16_USBC_SUS), value = 17, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_VDD_ESPI_IO), value = 18, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_SUS_DBG_PMU1_15_0), value = 19, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_SUS_DBG_PMU1_31_16),  value = 20, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_VDD_SUS_DBG_PMU2_15_0), value = 21, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_VDD_SUS_DBG_PMU2_31_16),  value = 22, flags = RESET_REQUIRED;          
       endoneof;
      
      numeric varid=SETUP_DATA.VDD_OFF_Group_Sel,
        prompt   = STRING_TOKEN(STR_VDD_OFF_GROUP_SEL),
        help   = STRING_TOKEN(STR_EMPTY),
        flags = DISPLAY_UINT_HEX,
        minimum=0,
        maximum=0xff,
        step=0,
        default=0,
       endnumeric;     
	endif;
    endform; //end DEBUGSIGNAL_FORM_ID       
    
  form formid = AUTO_ID(ERROR_REPORTING_FORM_ID),
      title = STRING_TOKEN(STR_ERROR_REPORTING_FORM);     
      oneof varid = SETUP_DATA.SERRNBControl,
        prompt      = STRING_TOKEN(STR_SERR_NB_CTRL),
        help        = STRING_TOKEN(STR_SERR_NB_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_SMI),     value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_NMI),     value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SCI),     value = 3, flags = RESET_REQUIRED;
      endoneof; 

      oneof varid = SETUP_DATA.LoopERSMIControl,
        prompt      = STRING_TOKEN(STR_LOOP_ERSMI_CTRL),
        help        = STRING_TOKEN(STR_LOOP_ERSMI_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
      endoneof;      

      oneof varid = SETUP_DATA.HIFErrControl,
        prompt      = STRING_TOKEN(STR_HIF_ERROR_CTRL),
        help        = STRING_TOKEN(STR_HIF_ERROR_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_ENABLE),  value = 1, flags = RESET_REQUIRED;          
      endoneof;
			
      oneof varid = SETUP_DATA.DRAMErrControl,
        prompt      = STRING_TOKEN(STR_DRAM_ERROR_CTRL),
        help        = STRING_TOKEN(STR_DRAM_ERROR_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED;          
        option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
      endoneof;
      

      
      oneof varid = SETUP_DATA.PE0ErrControl,
        prompt      = STRING_TOKEN(STR_PE0_ERROR_CTRL),
        help        = STRING_TOKEN(STR_PE0_ERROR_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;          
        option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
      endoneof;
      
      oneof varid = SETUP_DATA.PE1ErrControl,
        prompt      = STRING_TOKEN(STR_PE1_ERROR_CTRL),
        help        = STRING_TOKEN(STR_PE1_ERROR_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;          
        option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
      endoneof;
      
      oneof varid = SETUP_DATA.PE2ErrControl,
        prompt      = STRING_TOKEN(STR_PE2_ERROR_CTRL),
        help        = STRING_TOKEN(STR_PE2_ERROR_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;          
        option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
      endoneof; 
      
      oneof varid = SETUP_DATA.PE3ErrControl,
        prompt      = STRING_TOKEN(STR_PE3_ERROR_CTRL),
        help        = STRING_TOKEN(STR_PE3_ERROR_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;          
        option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
      endoneof;
	  
      oneof varid = SETUP_DATA.PE4ErrControl,
        prompt      = STRING_TOKEN(STR_PE4_ERROR_CTRL),
        help        = STRING_TOKEN(STR_PE4_ERROR_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;          
        option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
      endoneof;
      
      oneof varid = SETUP_DATA.PE5ErrControl,
        prompt      = STRING_TOKEN(STR_PE5_ERROR_CTRL),
        help        = STRING_TOKEN(STR_PE5_ERROR_CTRL_HELP),
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;          
        option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
      endoneof; 
	oneof varid = SETUP_DATA.PE6ErrControl,
	  prompt	  = STRING_TOKEN(STR_PE6_ERROR_CTRL),
	  help		  = STRING_TOKEN(STR_PE6_ERROR_CTRL_HELP),
	  option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
	  option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;		  
	  option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
	  option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
	endoneof;
	
	oneof varid = SETUP_DATA.PE7ErrControl,
	  prompt	  = STRING_TOKEN(STR_PE7_ERROR_CTRL),
	  help		  = STRING_TOKEN(STR_PE7_ERROR_CTRL_HELP),
	  option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
	  option text = STRING_TOKEN(STR_UNEXPECT_ERR),  value = 1, flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;		  
	  option text = STRING_TOKEN(STR_CORRECT_ERR), value = 2, flags = RESET_REQUIRED;
	  option text = STRING_TOKEN(STR_BOTH), value = 3, flags = RESET_REQUIRED ;
	endoneof;
    endform;//end ERROR REPORTING FORM 
    
   #endif  //end, FORM_SET_FORM
#endif  //end, ADVANCED_FORM_SET
