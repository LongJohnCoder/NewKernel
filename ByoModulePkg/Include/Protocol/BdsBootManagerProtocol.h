
#ifndef __BDS_BOOT_MANAGER_PROTOCOL_H__
#define __BDS_BOOT_MANAGER_PROTOCOL_H__

#include <UefiBootManagerLoadOption.h>

typedef struct _EFI_BDS_BOOT_MANAGER_PROTOCOL EFI_BDS_BOOT_MANAGER_PROTOCOL;


typedef  
VOID
(EFIAPI *EFI_BOOT_MANAGER_CONNECT_ALL) (
    VOID
  );

typedef  
VOID
(EFIAPI *EFI_BOOT_MANAGER_REFRESH_ALL_BOOT_OPTION) (
    VOID
  );  

typedef   
EFI_STATUS
(EFIAPI *EFI_BOOT_MANAGER_GET_LOAD_OPTIONS) (
  OUT EFI_BOOT_MANAGER_LOAD_OPTION   **Option,
  OUT UINTN                          *OptionCount
  );

typedef   
EFI_STATUS
(EFIAPI *EFI_BOOT_MANAGER_FREE_LOAD_OPTIONS) (
  IN EFI_BOOT_MANAGER_LOAD_OPTION   *Option,
  IN UINTN                          OptionCount
  );

typedef
EFI_STATUS
(EFIAPI *EFI_BOOT_MANAGER_CREATE_SETUP_BOOT_OPTION) (
  OUT EFI_BOOT_MANAGER_LOAD_OPTION   *SetupOption
);

typedef
EFI_STATUS
(EFIAPI *EFI_BOOT_MANAGER_CREATE_SHELL_BOOT_OPTION) (
  OUT EFI_BOOT_MANAGER_LOAD_OPTION   *ShellOption
);

typedef  
VOID
(EFIAPI *EFI_BOOT_MANAGER_BOOT)(
  IN  EFI_BOOT_MANAGER_LOAD_OPTION   *BootOption
  );

typedef
VOID *
(EFIAPI *EFI_BOOT_MANAGER_GET_VARIABLE_AND_SIZE) (
  IN  CHAR16              *Name,
  IN  EFI_GUID            *VendorGuid,
  OUT UINTN               *VariableSize
  );

typedef
EFI_STATUS
(EFIAPI *EFI_BOOT_MANAGER_BOOT_APP) (
  IN  EFI_GUID            *AppGuid
  );


struct _EFI_BDS_BOOT_MANAGER_PROTOCOL {
  EFI_BOOT_MANAGER_CONNECT_ALL              ConnectAll;
  EFI_BOOT_MANAGER_REFRESH_ALL_BOOT_OPTION  RefreshOptions;
  EFI_BOOT_MANAGER_GET_LOAD_OPTIONS         GetOptions;
  EFI_BOOT_MANAGER_FREE_LOAD_OPTIONS        FreeOptions;
  EFI_BOOT_MANAGER_CREATE_SETUP_BOOT_OPTION CreateSetupOption;
  EFI_BOOT_MANAGER_CREATE_SHELL_BOOT_OPTION CreateShellOption;  
  EFI_BOOT_MANAGER_BOOT                     Boot;
  EFI_BOOT_MANAGER_GET_VARIABLE_AND_SIZE    GetVarAndSize;
  EFI_BOOT_MANAGER_BOOT_APP                 BootApp;
};  
  
extern EFI_GUID gEfiBootManagerProtocolGuid;

#endif


